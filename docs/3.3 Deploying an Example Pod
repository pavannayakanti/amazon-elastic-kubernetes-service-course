# 🐳 Deploying an Example Pod: `nginx`

This guide walks through creating a simple `nginx` pod in your Kubernetes cluster and verifying its network IP address to ensure it’s using the AWS VPC network.

---

## 🚀 Step 1: Create the `nginx` Pod

Use the following command to create the `nginx` pod:

```bash
cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  containers:
  - name: nginx
    image: nginx:latest
    ports:
    - containerPort: 80
EOF

# 🐳 Deploying an Example Pod: `nginx`

This guide walks through creating a simple `nginx` pod in your Kubernetes cluster and verifying its network IP address to ensure it’s using the AWS VPC network.

---

## 🔍 Step 2: Verify Pod IP Comes from AWS VPC

You can confirm the pod's IP address falls within your VPC’s CIDR range.

### 📌 Get the VPC CIDR block:
```bash
aws ec2 describe-vpcs --query 'Vpcs[*].{VpcId:VpcId,CidrBlock:CidrBlock}' --output table

Get the IP of the nginx Pod:
kubectl get pod nginx -o jsonpath='{.status.podIP}'


###🧹 Step 3: Delete the Pod
When you’re done, clean up the pod:
kubectl delete pod nginx


